var searchIndex = {};
searchIndex["raster"] = {"doc":"# Raster","items":[[0,"color","raster","A module for handling colors.",null,null],[3,"Color","raster::color","A struct for representing and creating color.",null,null],[12,"r","","Red channel 0 - 255",0,null],[12,"g","","Green channel 0 - 255",0,null],[12,"b","","Blue channel 0 - 255",0,null],[12,"a","","Alpha channel 0 - 255",0,null],[11,"fmt","","",0,null],[11,"rgba","","Create a RGBA color.",0,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[11,"rgb","","Create a RGB color. Alpha defaults to opaque (255).",0,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[11,"clone","","Clones a Color.",0,null],[11,"black","","Returns a black Color.",0,{"inputs":[],"output":{"name":"color"}}],[0,"compare","raster","A module for comparing images.",null,null],[5,"similar","raster::compare","Compare two images and returns a hamming distance. A value of 0 indicates a likely similar picture.\nA value between 1 and 10 is potentially a variation. A value greater than 10 is likely a different image.",null,{"inputs":[{"name":"image"},{"name":"image"}],"output":{"name":"result"}}],[5,"equal","","Compare if two images are equal. It will compare if the two images are of the same width and height.\nIf the dimensions differ, it will return false. If the dimensions are equal, it will loop through each pixels. \nIf one of the pixel don&#39;t match, it will return false. The pixels are compared using their RGB (Red, Green, Blue) values.",null,{"inputs":[{"name":"image"},{"name":"image"}],"output":{"name":"result"}}],[0,"editor","raster","A module for editing images.",null,null],[5,"blend","raster::editor","Blend 2 images into one. The image1 is the base and image2 is the top.",null,{"inputs":[{"name":"image"},{"name":"image"},{"name":"str"},{"name":"f32"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"copy","","Create a copy of an image as another image.",null,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[5,"crop","","Crop the image to the given dimension and position.",null,{"inputs":[{"name":"image"},{"name":"i32"},{"name":"i32"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"fill","","Fill an image with color.",null,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"result"}}],[5,"resize","","Wrapper function for the resizeXXX family of functions.\nResize an image to a given width, height and mode.",null,{"inputs":[{"name":"image"},{"name":"i32"},{"name":"i32"},{"name":"str"}],"output":{"name":"result"}}],[5,"resize_exact","","Resize image to exact dimensions ignoring aspect ratio.\nUseful if you want to force exact width and height.",null,{"inputs":[{"name":"image"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"resize_exact_height","","Resize image to exact height. Width is auto calculated.\nUseful for creating row of images with the same height.",null,{"inputs":[{"name":"image"},{"name":"i32"}],"output":{"name":"result"}}],[5,"resize_exact_width","","Resize image to exact width. Height is auto calculated.\nUseful for creating column of images with the same width.",null,{"inputs":[{"name":"image"},{"name":"i32"}],"output":{"name":"result"}}],[5,"resize_fill","","Resize image to fill all the space in the given dimension. Excess parts are removed.",null,{"inputs":[{"name":"image"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"resize_fit","","Resize an image to fit within the given width and height.\nThe re-sized image will not exceed the given dimension. \nPreserves the aspect ratio.",null,{"inputs":[{"name":"image"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[5,"save","","Save an image into a file.",null,{"inputs":[{"name":"image"},{"name":"str"}],"output":null}],[0,"image","raster","A module for handling a raster image.",null,null],[3,"Image","raster::image","A struct for easily representing a raster image.",null,null],[12,"width","","Width of image in pixels.",1,null],[12,"height","","Height of image in pixels.",1,null],[12,"bytes","","Vector containing sequence of bytes in RGBA format.",1,null],[11,"fmt","","",1,null],[11,"blank","","Create a blank image. Default color is black.",1,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"image"}}],[11,"check_pixel","","Check if there is a pixel at this location given by x and y.",1,null],[11,"from_file","","Create an image from an image file.",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"get_pixel","","Get pixel in a given x and y location of an image.",1,null],[11,"set_pixel","","Set pixel in a given x and y location of an image.",1,null]],"paths":[[3,"Color"],[3,"Image"]]};
initSearch(searchIndex);
